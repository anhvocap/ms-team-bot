{"version":3,"file":"server.js","mappings":"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","sources":["webpack://teamappprofile/./src/server/TeamsAppsComponents.ts?6a42","webpack://teamappprofile/./src/server/myProfileTab/MyProfileTab.ts?84ee","webpack://teamappprofile/./src/server/myWorkTab/MyWorkTab.ts?12fa","webpack://teamappprofile/./src/server/routes/api.ts?fca5","webpack://teamappprofile/./src/server/server.ts?3175","webpack://teamappprofile/./src/server/services/authService.ts?844d","webpack://teamappprofile/external commonjs \"axios\"?3775","webpack://teamappprofile/external commonjs \"compression\"?e0c2","webpack://teamappprofile/external commonjs \"debug\"?b525","webpack://teamappprofile/external commonjs \"dotenv\"?3fba","webpack://teamappprofile/external commonjs \"express\"?c4a6","webpack://teamappprofile/external commonjs \"express-msteams-host\"?eac2","webpack://teamappprofile/external commonjs \"form-data\"?e316","webpack://teamappprofile/external commonjs \"jwt-decode\"?39df","webpack://teamappprofile/external commonjs \"morgan\"?66c0","webpack://teamappprofile/external node-commonjs \"http\"?78d4","webpack://teamappprofile/external node-commonjs \"path\"?1f34","webpack://teamappprofile/webpack/bootstrap?7f80","[]"],"sourcesContent":["// Components will be added here\nexport const nonce = {}; // Do not remove!\n// Automatically added for the myWorkTab tab\nexport * from \"./myWorkTab/MyWorkTab\";\nexport * from \"./myProfileTab/MyProfileTab\";\n","import { PreventIframe } from \"express-msteams-host\";\n\n/**\n * Used as place holder for the decorators\n */\n@PreventIframe(\"/myProfileTab/index.html\")\nexport class MyProfileTab {\n}\n","import { PreventIframe } from \"express-msteams-host\";\n\n/**\n * Used as place holder for the decorators\n */\n@PreventIframe(\"/myWorkTab/index.html\")\n@PreventIframe(\"/myWorkTab/config.html\")\n@PreventIframe(\"/myWorkTab/remove.html\")\nexport class MyWorkTab {\n}\n","import * as express from \"express\";\nimport authService from \"../services/authService\";\nimport * as info from \"../../../package.json\";\nconst router = express.Router();\n\nrouter.get(\"/status\", function (req, res, next) {\n    console.log(\"- WEB_INFO:\", process.env.WEB_INFO);\n    res.json({\n        status: true,\n        message: `${info.name} execute get success`,\n        version: info.version,\n        web_info: process.env.WEB_INFO\n    });\n    next();\n});\n\nrouter.post(\"/token\", async function (req, res) {\n    try {\n        const appSecret = req.header(\"app_secret\") as string;\n\n        if (!appSecret) {\n            throw new Error(\"application secret key is required\");\n        }\n\n        if (appSecret !== process.env.APP_SECRET) {\n            throw new Error(\"application secret key is invalid\");\n        }\n\n        const data = await authService.getAccessToken();\n        res.json({ status: true, data });\n    } catch (err) {\n        res.send({ status: 400, message: err.message });\n    }\n});\n\nexport default router;\n","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport * as compression from \"compression\";\nimport api from \"./routes/api\";\nimport jwtDecode from \"jwt-decode\";\nimport Axios, { AxiosResponse } from \"axios\";\n\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\nlog(\"Initializing Microsoft Teams Express hosted App...\");\n\n// Initialize dotenv, to use .env file settings if existing\nrequire(\"dotenv\").config();\n\n// The import of components has to be done AFTER the dotenv config\n// eslint-disable-next-line import/first\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\n// Inject the raw request body onto the request object\nexpress.use(Express.json({\n  verify: (req, res, buf: Buffer, encoding: string): void => {\n    (req as any).rawBody = buf.toString();\n  }\n}));\nexpress.use(Express.urlencoded({ extended: true }));\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Add compression - uncomment to remove compression\nexpress.use(compression());\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsPageRouter({\n  root: path.join(__dirname, \"web/\"),\n  components: allComponents\n}));\n\n// setup api as /v1\nexpress.use(\"/v1/api\", api);\n\n// Set default web page\nexpress.use(\"/\", Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\"\n}));\n\nexpress.get(\"/exchangeSsoTokenForOboToken\", async (req, res) => {\n  log(\"getting access token for Microsoft Graph...\");\n\n  const clientId = process.env.TAB_APP_ID as string;\n  const clientSecret = process.env.TAB_APP_SECRET as string;\n  const ssoToken = req.query.ssoToken as string;\n\n  // build Azure AD OAuth2 token endpoint\n  const aadTokenEndpoint = `https://login.microsoftonline.com/${jwtDecode<any>(ssoToken).tid}/oauth2/v2.0/token`;\n\n  // build body of request to obtain an access token using the OAuth2 OBO flow\n  const oAuthOBOParams = {\n      grant_type: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n      client_id: clientId,\n      client_secret: clientSecret,\n      assertion: ssoToken,\n      requested_token_use: \"on_behalf_of\",\n      scope: process.env.TAB_APP_SCOPES\n  };\n\n  // convert params to URL encoded form body payload\n  const oAuthOboRequest = Object.keys(oAuthOBOParams)\n    .map((key, index) => `${key}=${encodeURIComponent(oAuthOBOParams[key])}`)\n    .join(\"&\");\n\n  const HEADERS = {\n      accept: \"application/json\",\n      \"content-type\": \"application/x-www-form-urlencoded\"\n  };\n\n  try {\n    // submit request\n    const response = await Axios.post(aadTokenEndpoint, oAuthOboRequest, { headers: HEADERS });\n    // check response\n    if (response.status === 200) {\n      // on successful response, return full object to client\n      res.status(200).send(response.data);\n    } else {\n      // else on non-success...\n      if ((response.data.error === \"invalid_grant\") || (response.data.error === \"interaction_required\")) {\n          // if consent required... reply with 403: Forbidden\n          res.status(403).json({ error: \"consent_required\" });\n      } else {\n          // else, some other error occurred... fail\n          res.status(500).json({ error: \"Could not exchange access token\" });\n      }\n    }\n  } catch (error) {\n    // for all others, fail\n    res.status(400).json({ error: `Unknown error: ${error}` });\n  }\n});\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n  log(`Server running on ${port}`);\n});\n","import axios from \"axios\";\nimport * as FormData from \"form-data\";\n\nconst linkToken = \"https://login.microsoftonline.com/f055188a-0916-40fd-aeed-2ba499834c94/oauth2/v2.0/token\";\nconst headers = {\n  headers: {\n    \"Content-Type\": \"multipart/form-data\"\n  }\n};\n\nconst getAccessToken = async function() {\n  try {\n    const formData = new FormData();\n    formData.append(\"grant_type\", \"client_credentials\");\n    formData.append(\"client_id\", \"f50bebee-b729-43fd-b01b-a3da4bc77250\");\n    formData.append(\"client_secret\", \"HKq8Q~2MDu42ARyeocQXzJzkvhUnLlf7cU46lcno\");\n    formData.append(\"scope\", \"https://graph.microsoft.com/.default\");\n\n    const res = await axios.post(linkToken, formData, headers);\n    const { token_type, expires_in, not_before, expires_on, resource, access_token } = res.data;\n    return { token_type, expires_in, access_token };\n  } catch (err) {\n    console.log(\"ERROR: getAccessToken has error !\");\n    throw err;\n  }\n};\n\nexport default {\n  getAccessToken\n};\n","module.exports = require(\"axios\");","module.exports = require(\"compression\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-msteams-host\");","module.exports = require(\"form-data\");","module.exports = require(\"jwt-decode\");","module.exports = require(\"morgan\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(967);\n"],"names":["nonce","MyProfileTab","PreventIframe","MyWorkTab","router","express","Router","get","req","res","next","console","log","process","env","WEB_INFO","json","status","message","info","name","version","web_info","post","appSecret","header","Error","APP_SECRET","data","getAccessToken","err","send","debug","Express","port","PORT","use","verify","buf","encoding","rawBody","toString","urlencoded","extended","set","path","join","__dirname","morgan","compression","static","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","clientId","TAB_APP_ID","clientSecret","TAB_APP_SECRET","ssoToken","query","aadTokenEndpoint","tid","oAuthOBOParams","grant_type","client_id","client_secret","assertion","requested_token_use","scope","TAB_APP_SCOPES","oAuthOboRequest","Object","keys","map","key","encodeURIComponent","HEADERS","accept","response","headers","error","http","createServer","listen","formData","FormData","append","token_type","expires_in","not_before","expires_on","resource","access_token","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}