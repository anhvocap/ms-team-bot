{"version":3,"file":"server.js","mappings":"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","sources":["webpack://teamappprofile/./src/server/TeamsAppsComponents.ts?6a42","webpack://teamappprofile/./src/server/myWorkTab/MyWorkTab.ts?12fa","webpack://teamappprofile/./src/server/server.ts?3175","webpack://teamappprofile/external commonjs \"axios\"?3775","webpack://teamappprofile/external commonjs \"compression\"?e0c2","webpack://teamappprofile/external commonjs \"debug\"?b525","webpack://teamappprofile/external commonjs \"dotenv\"?3fba","webpack://teamappprofile/external commonjs \"express\"?c4a6","webpack://teamappprofile/external commonjs \"express-msteams-host\"?eac2","webpack://teamappprofile/external commonjs \"jwt-decode\"?39df","webpack://teamappprofile/external commonjs \"morgan\"?66c0","webpack://teamappprofile/external node-commonjs \"http\"?78d4","webpack://teamappprofile/external node-commonjs \"path\"?1f34","webpack://teamappprofile/webpack/bootstrap?7f80","[]"],"sourcesContent":["// Components will be added here\nexport const nonce = {}; // Do not remove!\n// Automatically added for the myWorkTab tab\nexport * from \"./myWorkTab/MyWorkTab\";\n","import { PreventIframe } from \"express-msteams-host\";\n\n/**\n * Used as place holder for the decorators\n */\n@PreventIframe(\"/myWorkTab/index.html\")\n@PreventIframe(\"/myWorkTab/config.html\")\n@PreventIframe(\"/myWorkTab/remove.html\")\nexport class MyWorkTab {\n}\n","import * as Express from \"express\";\nimport * as http from \"http\";\nimport * as path from \"path\";\nimport * as morgan from \"morgan\";\nimport { MsTeamsApiRouter, MsTeamsPageRouter } from \"express-msteams-host\";\nimport * as debug from \"debug\";\nimport * as compression from \"compression\";\nimport jwtDecode from \"jwt-decode\";\nimport Axios, { AxiosResponse } from \"axios\";\n\n// Initialize debug logging module\nconst log = debug(\"msteams\");\n\nlog(\"Initializing Microsoft Teams Express hosted App...\");\n\n// Initialize dotenv, to use .env file settings if existing\nrequire(\"dotenv\").config();\n\n// The import of components has to be done AFTER the dotenv config\n// eslint-disable-next-line import/first\nimport * as allComponents from \"./TeamsAppsComponents\";\n\n// Create the Express webserver\nconst express = Express();\nconst port = process.env.port || process.env.PORT || 3007;\n\n// Inject the raw request body onto the request object\nexpress.use(Express.json({\n    verify: (req, res, buf: Buffer, encoding: string): void => {\n        (req as any).rawBody = buf.toString();\n    }\n}));\nexpress.use(Express.urlencoded({ extended: true }));\n\n// Express configuration\nexpress.set(\"views\", path.join(__dirname, \"/\"));\n\n// Add simple logging\nexpress.use(morgan(\"tiny\"));\n\n// Add compression - uncomment to remove compression\nexpress.use(compression());\n\n// Add /scripts and /assets as static folders\nexpress.use(\"/scripts\", Express.static(path.join(__dirname, \"web/scripts\")));\nexpress.use(\"/assets\", Express.static(path.join(__dirname, \"web/assets\")));\n\n// routing for bots, connectors and incoming web hooks - based on the decorators\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsApiRouter(allComponents));\n\n// routing for pages for tabs and connector configuration\n// For more information see: https://www.npmjs.com/package/express-msteams-host\nexpress.use(MsTeamsPageRouter({\n    root: path.join(__dirname, \"web/\"),\n    components: allComponents\n}));\n\n// Set default web page\nexpress.use(\"/\", Express.static(path.join(__dirname, \"web/\"), {\n    index: \"index.html\"\n}));\n\n\nexpress.get(\"/exchangeSsoTokenForOboToken\", async (req, res) => {\n    log(\"getting access token for Microsoft Graph...\");\n  \n    const clientId = process.env.TAB_APP_ID as string;\n    const clientSecret = process.env.TAB_APP_SECRET as string;\n    const ssoToken = req.query.ssoToken as string;\n  \n    // build Azure AD OAuth2 token endpoint\n    const aadTokenEndpoint = `https://login.microsoftonline.com/${jwtDecode<any>(ssoToken).tid}/oauth2/v2.0/token`;\n  \n    // build body of request to obtain an access token using the OAuth2 OBO flow\n    const oAuthOBOParams = {\n      grant_type: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n      client_id: clientId,\n      client_secret: clientSecret,\n      assertion: ssoToken,\n      requested_token_use: \"on_behalf_of\",\n      scope: process.env.TAB_APP_SCOPES\n    };\n  \n    // convert params to URL encoded form body payload\n    const oAuthOboRequest = Object.keys(oAuthOBOParams)\n      .map((key, index) => `${key}=${encodeURIComponent(oAuthOBOParams[key])}`)\n      .join(\"&\");\n  \n    const HEADERS = {\n      accept: \"application/json\",\n      \"content-type\": \"application/x-www-form-urlencoded\"\n    };\n  \n    try {\n      // submit request\n      const response = await Axios.post(aadTokenEndpoint, oAuthOboRequest, { headers: HEADERS });\n  \n      // check response\n      if (response.status === 200) {\n        // on successful response, return full object to client\n        res.status(200).send(response.data);\n      } else {\n        // else on non-success...\n        if ((response.data.error === \"invalid_grant\") || (response.data.error === \"interaction_required\")) {\n          // if consent required... reply with 403: Forbidden\n          res.status(403).json({ error: \"consent_required\" });\n        } else {\n          // else, some other error occurred... fail\n          res.status(500).json({ error: \"Could not exchange access token\" });\n        }\n      }\n    } catch (error) {\n      // for all others, fail\n      res.status(400).json({ error: `Unknown error: ${error}` });\n    }\n});\n\n\n// Set the port\nexpress.set(\"port\", port);\n\n// Start the webserver\nhttp.createServer(express).listen(port, () => {\n    log(`Server running on ${port}`);\n});\n","module.exports = require(\"axios\");","module.exports = require(\"compression\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-msteams-host\");","module.exports = require(\"jwt-decode\");","module.exports = require(\"morgan\");","module.exports = require(\"http\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(967);\n"],"names":["nonce","MyWorkTab","PreventIframe","log","debug","express","Express","port","process","env","PORT","use","json","verify","req","res","buf","encoding","rawBody","toString","urlencoded","extended","set","path","join","__dirname","morgan","compression","static","MsTeamsApiRouter","allComponents","MsTeamsPageRouter","root","components","index","get","clientId","TAB_APP_ID","clientSecret","TAB_APP_SECRET","ssoToken","query","aadTokenEndpoint","tid","oAuthOBOParams","grant_type","client_id","client_secret","assertion","requested_token_use","scope","TAB_APP_SCOPES","oAuthOboRequest","Object","keys","map","key","encodeURIComponent","HEADERS","accept","response","post","headers","status","send","data","error","http","createServer","listen","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}